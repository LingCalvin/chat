/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/auth/sign-in': {
    post: operations['AuthController_signIn'];
  };
  '/auth/sign-up': {
    post: operations['AuthController_signUp'];
  };
  '/auth/delete-account': {
    post: operations['AuthController_deleteAccount'];
  };
}

export interface components {
  schemas: {
    CredentialsDto: {
      /** The user's password. */
      password: string;
      /** The user's username. */
      username: string;
    };
    SignInResponse: {
      id: string;
      username: string;
      createdAt: string;
      updatedAt: string;
    };
    SignUpResponse: {
      id: string;
      username: string;
      createdAt: string;
      updatedAt: string;
    };
    AccountIdDto: {
      id: string;
    };
  };
}

export interface operations {
  AuthController_signIn: {
    parameters: {};
    responses: {
      /** The client has successfully authenticated. */
      200: {
        content: {
          'application/json': components['schemas']['SignInResponse'];
        };
      };
      /** The client's attempt to authenticate was unsuccessful. */
      400: {
        content: {
          'application/json': {
            /** The HTTP response status code. */
            status: 400;
            /** A message describing why the authentication attempt was unsuccessful. */
            message: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['CredentialsDto'];
      };
    };
  };
  AuthController_signUp: {
    parameters: {};
    responses: {
      /** The account was successfully registered. */
      201: {
        content: {
          'application/json': components['schemas']['SignUpResponse'];
        };
      };
      /** One or more validation rules were not met. */
      400: {
        content: {
          'application/json': {
            /** The HTTP response status code */
            statusCode: 400;
            /** An array of messages explaining the failed validation rules. */
            message: string[];
            /** The error. */
            error: string;
          };
        };
      };
      /** An account with the specified username already exists. */
      409: {
        content: {
          'application/json': {
            /** The HTTP response status code */
            statusCode: 409;
            /** A message describing the error. */
            message: string;
            /** The error. */
            error: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['CredentialsDto'];
      };
    };
  };
  AuthController_deleteAccount: {
    parameters: {};
    responses: {
      /** The account has been deleted */
      200: unknown;
      /** The client must authenticate to use this endpoint. */
      401: {
        content: {
          'application/json': {
            /** The HTTP response status code */
            statusCode: 401;
            /** A message explaining that the client must authenticate before using this endpoint. */
            message: string;
            /** The error. */
            error: string;
          };
        };
      };
      /** The client does not have permission to perform the requested action on this resource. */
      403: {
        content: {
          'application/json': {
            /** The HTTP response status code */
            statusCode: 403;
            /** A message explaining that the client lacks the necessary permissions to carry out their request. */
            message: string;
            /** The error. */
            error: string;
          };
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['AccountIdDto'];
      };
    };
  };
}

export interface external {}
